// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SpeedController.h"
#include "../Commands/GameEle.h"
#include "PIDEle.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

PIDEle::PIDEle() : frc::Subsystem("PIDEle") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    ele = RobotMap::pIDEleEle;
    stringPot = RobotMap::pIDEleStringPot;
    elevator = RobotMap::pIDEleElevator;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    //initializes lift_y variable to 0
    lift_y = 0;

}

void PIDEle::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new GameEle());
}

void PIDEle::Periodic() {
    // Put code here to be run every loop

}

void PIDEle::GameLift(std::shared_ptr<Joystick> gamePad)
{

	//gets the y value from the gamepad and passes it to the lift_y
	lift_y = gamePad->GetY(frc::GenericHID::JoystickHand::kLeftHand);

	//sets max speed for going up
	if(lift_y == -1)
	{
		ele->Set(-1);
	}
	else if(lift_y == 1) //if max for down is read in
	{					 //sets the speed to 40%
		ele->Set(.4);
	}
	else				 //At all other times
	{					 //elevator is set to 20%
		ele->Set(-.2);
	}


}


// Put methods for controlling this subsystem
// here. Call these from Commands.

